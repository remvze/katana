services:
  mongodb:
    image: mongo:latest
    container_name: katana-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    env_file:
      - .env
    networks:
      - katana-network
    restart: unless-stopped

  katana:
    image: ghcr.io/remvze/katana
    restart: always
    deploy:
      replicas: 3
    environment:
      PUBLIC_TURNSTILE_SITE_KEY: ${PUBLIC_TURNSTILE_SITE_KEY}
      TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
      PUBLIC_UNSHORTENER_LINK: ${PUBLIC_UNSHORTENER_LINK}
      MONGODB_URI: ${MONGODB_URI}
      HOST: 0.0.0.0
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - katana-network
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    command: sh -c "npm run migrate:up && npm run start"

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - katana-network

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 30 --label-enable --rolling-restart
    restart: unless-stopped
    networks:
      - katana-network

networks:
  katana-network:
    driver: bridge
