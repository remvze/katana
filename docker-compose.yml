services:
  mongodb:
    image: mongo:latest
    container_name: katana-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    env_file:
      - .env
    networks:
      - katana-network
    ports:
      - 27017
    healthcheck:
      test:
        [
          'CMD',
          'mongo',
          '--username',
          '${MONGODB_USERNAME}',
          '--password',
          '${MONGODB_PASSWORD}',
          '--authenticationDatabase',
          'admin',
          '--eval',
          "db.adminCommand('ping')",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  app-config: &app-config
    build: .
    restart: always
    environment:
      - PUBLIC_TURNSTILE_SITE_KEY=${PUBLIC_TURNSTILE_SITE_KEY}
      - TURNSTILE_SECRET_KEY=${TURNSTILE_SECRET_KEY}
      - PUBLIC_UNSHORTENER_LINK=${PUBLIC_UNSHORTENER_LINK}
      - MONGODB_URI=${MONGODB_URI}
      - HOST=0.0.0.0
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - katana-network
    command: sh -c "npm run migrate:up && npm run start"
    healthcheck:
      test: ['CMD', 'exit', '1']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  katana-one:
    <<: *app-config
    container_name: katana-app-one
    ports:
      - 127.0.0.1:4321:4321

  katana-two:
    <<: *app-config
    container_name: katana-app-two
    ports:
      - 127.0.0.1:4322:4321
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4322/']

networks:
  katana-network:
    driver: bridge
