x-app-config: &app-config
  image: ghcr.io/remvze/katana
  restart: always
  environment:
    PUBLIC_TURNSTILE_SITE_KEY: ${PUBLIC_TURNSTILE_SITE_KEY}
    TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
    PUBLIC_UNSHORTENER_LINK: ${PUBLIC_UNSHORTENER_LINK}
    MONGODB_URI: ${MONGODB_URI}
    HOST: 0.0.0.0
  env_file:
    - .env
  depends_on:
    - mongodb
  networks:
    - katana-network
  labels:
    - 'com.centurylinklabs.watchtower.enable=true'
  command: sh -c "npm run migrate:up && npm run start"

services:
  mongodb:
    image: mongo:latest
    container_name: katana-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    env_file:
      - .env
    networks:
      - katana-network
    restart: unless-stopped

  katana-one:
    <<: *app-config
    container_name: katana-app-one

  katana-two:
    <<: *app-config
    container_name: katana-app-two

  katana-three:
    <<: *app-config
    container_name: katana-app-three

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - katana-one
      - katana-two
      - katana-three
    networks:
      - katana-network

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 60 --label-enable
    restart: unless-stopped

networks:
  katana-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
